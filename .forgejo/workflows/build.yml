name: Build & Push

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        runner: ['ubuntu-latest', 'ubuntu-latest-arm64']
        build: ['debug', 'release']
    runs-on: '${{ matrix.runner }}'
    container:
      image: ghcr.io/catthehacker/ubuntu:rust-latest

    steps:
    - name: Checkout Repo
      uses: actions/checkout@v4
    - name: Get Architecture
      run: echo "ARCH=$(uname -m)" >> $GITHUB_ENV
    - name: Build Binary
      run: |
        RELEASE_FLAG=""
        if [ "${{ matrix.build }}" = "release" ]; then
          RELEASE_FLAG="--release"
        fi
        cargo build ${RELEASE_FLAG}
        mv target/${{ matrix.build }}/maze-valence maze-valence-${{ env.ARCH }}-${{ matrix.build }}
    - name: Upload Artifact
      uses: forgejo/upload-artifact@v4
      with:
        name: maze-valence-${{ env.ARCH }}-${{ matrix.build }}
        path: maze-valence-${{ env.ARCH }}-${{ matrix.build }}
  push:
    runs-on: ubuntu-latest
    if: ${{ github.repository == github.event.repository.full_name }}
    needs:
    - build

    steps:
    - name: Checkout Repo
      uses: actions/checkout@v4
    - name: Download Artifacts
      uses: forgejo/download-artifact@v4
      with:
        path: artifacts
        pattern: maze-valence-*-release
        merge-multiple: true
        
    - name: List And Fix Artifacts
      run: |
        ls -lAR artifacts
        chmod +x artifacts/*
      
    - name: Upload Release
      uses: actions/forgejo-release@v2
      with:
        direction: upload
        url: https://git.craftingcomrades.net
        release-dir: artifacts
        token: ${{ github.token }}
        tag: "nightly"
        title: "Nightly Release"
        override: true
        prerelease: true


    - name: Create Docker Context
      run: docker context create docker-dind --docker "host=tcp://docker-in-docker:2375"
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        endpoint: docker-dind
        driver-opts: network=host

    - name: Log into Forgejo Registry
      uses: docker/login-action@v3
      with:
        registry: git.craftingcomrades.net
        username: ${{ github.actor }}
        password: ${{ secrets.FORGEJO_REGISTRY_TOKEN }}

    - name: Get Metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        tags: |
          type=raw,enable={{is_default_branch}},value=latest,priority=1000
        images: |
          git.craftingcomrades.net/${{ github.repository }}
            
    - name: Build and Push Image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        file: Dockerfile.ci
